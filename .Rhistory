# Simulate some data
df =
tibble(
x1 = rpois(n = 1000, lambda = 2),
x2 = rpois(n = 1000, lambda = 2),
x3 = rpois(n = 1000, lambda = 2),
x4 = rpois(n = 1000, lambda = 2),
x5 = rpois(n = 1000, lambda = 5),
x6 = rpois(n = 1000, lambda = 5),
x7 = rpois(n = 1000, lambda = 5),
x8 = rpois(n = 1000, lambda = 5),
x9 = rpois(n = 1000, lambda = 10),
x10 = rpois(n = 1000, lambda = 10)
)
library(dplyr)
library(tibble)
# Simulate some data
df =
tibble(
x1 = rpois(n = 1000, lambda = 2),
x2 = rpois(n = 1000, lambda = 2),
x3 = rpois(n = 1000, lambda = 2),
x4 = rpois(n = 1000, lambda = 2),
x5 = rpois(n = 1000, lambda = 5),
x6 = rpois(n = 1000, lambda = 5),
x7 = rpois(n = 1000, lambda = 5),
x8 = rpois(n = 1000, lambda = 5),
x9 = rpois(n = 1000, lambda = 10),
x10 = rpois(n = 1000, lambda = 10)
)
head(df)
set.seed(2012)
df =
tibble(
x1  = rpois(n = 5, lambda = 2),
x2  = rpois(n = 5, lambda = 2),
x3  = rpois(n = 5, lambda = 2),
x4  = rpois(n = 5, lambda = 2),
x5  = rpois(n = 5, lambda = 5),
x6  = rpois(n = 5, lambda = 5),
x7  = rpois(n = 5, lambda = 5),
x8  = rpois(n = 5, lambda = 5),
x9  = rpois(n = 5, lambda = 10),
x10 = rpois(n = 5, lambda = 10)
)
df =
tibble(
x1  = rpois(n = 5, lambda = 2),
x2  = rpois(n = 5, lambda = 2),
x3  = rpois(n = 5, lambda = 2),
x4  = rpois(n = 5, lambda = 2),
x5  = rpois(n = 5, lambda = 5),
x6  = rpois(n = 5, lambda = 5),
x7  = rpois(n = 5, lambda = 5),
x8  = rpois(n = 5, lambda = 5),
x9  = rpois(n = 5, lambda = 10),
x10 = rpois(n = 5, lambda = 10)
) %>%
# Make all instances o
head(df)
head(df)
))
df =
tibble(
x1  = rpois(n = 5, lambda = 2),
x2  = rpois(n = 5, lambda = 2),
x3  = rpois(n = 5, lambda = 2),
x4  = rpois(n = 5, lambda = 2),
x5  = rpois(n = 5, lambda = 5),
x6  = rpois(n = 5, lambda = 5),
x7  = rpois(n = 5, lambda = 5),
x8  = rpois(n = 5, lambda = 5),
x9  = rpois(n = 5, lambda = 10),
x10 = rpois(n = 5, lambda = 10)
) %>%
# Make all instances of 2 = Blank
dplyr::mutate(across(.cols = everything(), ~ dplyr::if_else(
.x == 2, "BLANK", as.character(.x)
)))
head(df)
# Count number of times BLANK occurs in each row
df %>%
dplyr::mutate(no_times = rowSums(across(all_of(cols), "%in%", BLANK )))
# Count number of times BLANK occurs in each row
df %>%
dplyr::mutate(no_times = rowSums(across(.cols = everything), "%in%", BLANK )))
df %>%
dplyr::mutate(no_times = rowSums(across(.cols = everything), "%in%", BLANK )))
# Count number of times BLANK occurs in each row
df %>%
dplyr::mutate(no_times = rowSums(across(.cols = everything), "%in%", BLANK ))
# Count number of times BLANK occurs in each row
df %>%
dplyr::mutate(no_times = rowSums(across(.cols = everything), ~ "%in%", BLANK ))
# Count number of times BLANK occurs in each row
df %>%
dplyr::mutate(no_times = rowSums(across(.cols = everything), ~ stringr::str_count(.x, "BLANK") ))
# Count number of times BLANK occurs in each row
df %>%
dplyr::mutate(no_times = across(.cols = everything), ~ stringr::str_count(.x, "BLANK") ))
df %>%
dplyr::mutate(no_times = across(.cols = everything), ~ stringr::str_count(.x, "BLANK") ))
df %>%
dplyr::mutate(no_times = across(.cols = everything), ~ stringr::str_count(.x, "BLANK"))
# Count number of times BLANK occurs in each row
df %>%
dplyr::mutate(no_times = across(.cols = everything()), ~ stringr::str_count(.x, "BLANK"))
df %>%
dplyr::mutate(no_times = across(.cols = everything()), ~ stringr::str_count(.x, "BLANK"))
# Count number of times BLANK occurs in each row
df %>%
dplyr::rowwise() %>%
dplyr::mutate(no_times = stringr::str_count(.x, "BLANK"))
# Count number of times BLANK occurs in each row
df %>%
dplyr::rowwise() %>%
dplyr::mutate(no_times = stringr::str_count("BLANK"))
df %>%
dplyr::rowwise() %>%
dplyr::mutate(no_times = stringr::str_count("BLANK"))
dplyr::mutate(no_times = across(.cols = everything(), ~ stringr::str_count("BLANK"))
)
df %>%
dplyr::rowwise() %>%
dplyr::mutate(no_times = mutate(across(.cols = everything(), ~ stringr::str_count("BLANK")))
)
df %>%
dplyr::mutate(no_times = mutate(across(.cols = everything(), ~ stringr::str_count("BLANK")))
)
df %>%
dplyr::mutate(row_id = dplyr::cur_group_rows())
df %>%
dplyr::mutate(row_id = dplyr::cur_group_rows()) %>%
dplyr::mutate(no_times = mutate(across(.cols = contains("x"), ~ stringr::str_count("BLANK")))
)
View(df)
df %>%
dplyr::mutate(row_id = dplyr::cur_group_rows()) %>%
dplyr::mutate(no_times = mutate(across(.cols = contains("x"), ~ stringr::str_count("BLANK")))) %>%
View()
df %>%
dplyr::mutate(no_times = rowSums(across(all_of(cols), '%in%', BLANK)))
# Count number of times BLANK occurs in each row
df %>%
dplyr::mutate(no_times = rowSums(across(all_of(.), '%in%', BLANK)))
# Count number of times BLANK occurs in each row
cols <- colnames(df)
cols
df %>%
dplyr::mutate(no_times = rowSums(across(all_of(cols), '%in%', BLANK)))
df %>%
dplyr::mutate(no_times = rowSums(across(all_of(cols), '%in%', "BLANK")))
cols <- colnames(df)
df %>%
dplyr::mutate(no_times = rowSums(across(all_of(cols), '%in%', BLANK)))
dplyr::mutate(no_times = rowSums(across(all_of(cols), ~ str_detect(.x, "BLANK")))
)
cols <- colnames(df)
df %>%
dplyr::mutate(no_times = rowSums(across(all_of(cols), ~ str_detect(.x, "BLANK")))
)
dplyr::mutate(no_times = rowSums(across(all_of(cols), ~ stringr::str_detect(.x, "BLANK")))
)
cols <- colnames(df)
df %>%
dplyr::mutate(no_times = rowSums(across(all_of(cols), ~ stringr::str_detect(.x, "BLANK")))
)
df %>%
dplyr::mutate(no_times = rowSums(across(.cols = everything(), ~ stringr::str_detect(.x, "BLANK")))
)
df %>%
dplyr::mutate(no_times = rowSums(across(.cols = everything(), ~ stringr::str_detect(.x, "BLANK"))))
